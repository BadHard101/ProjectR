<#include "../../header.ftlh">

<#include "panel.ftlh">

<style>
    .overlay {
        position: relative;
        display: inline-block;
        border-radius: 10px;
        padding: 1% 3%;
        margin-top: 1%;
        margin-bottom: 2%;
    }

    .overlay::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(176, 200, 253, 0.5); /* Белый цвет с прозрачностью 50% */
        z-index: -1;
        border-radius: 15px; /* Задает округлые границы */
        filter: blur(10px); /* Задает размытие границ */
    }

</style>
<div class="overlay">
    <h3>Теория</h3>
    <p></p>
    <p class="mt-4">
        Как Вы могли сами убедиться, шифр Цезаря предельно просто во всех его проявлениях – и для понимания, и для
        использования, и для взлома. Однако, что будет, если использовать для шифрования не один ключ на весь алфавит, а
        индивидуальный для каждого отдельно взятого символа, попросту перемешать все буквы? Именно так работает шифр простой
        замены.
    </p>
    <p>
        В отличие от шифра Цезаря, где ключ мог разниться в пределах длины самого алфавита, в шифре простой замены в
        качестве ключа используется последовательность символов или их индексов, согласно которому одни буквы исходного
        текста заменяются на другие. То есть, если исходный текст, к примеру «cabbaccab» (алфавит состоит из одних только
        букв a, b, c), а ключ – [b, c, a], то текст преобразуется в «abccbaabc». Казалось бы, ничего сложного, но в
        действительности, если для алфавита в 26 букв в случае шифра Цезаря вариантов ключа всего 25, то для шифра простой
        замены это 26! (26 факториал) – число, превышающее несколько септиллионов (10<sup>26</sup>).
    </p>
    <p>
        На грубый перебор такого количества вариантов времени понадобится куда больше разумного. Поэтому тут уместен другой,
        куда более тонкий подход, а именно статистический криптоанализ. Статистический криптоанализ представляет собой
        анализ шифротекста на частоты встречающихся в нем языковых конструкций: отдельных букв или их групп по 2 или 3 штуки
        (би- и триграммы, соответственно), и последующее сравнение полученных данных с известными (эталонными) частотами
        появления этих конструкций в использующемся языке. Чем меньше разница между данными частот расшифрованного текста и
        эталонными, тем ближе подобранный ключ к истинному.
    </p>
    <p>
        Таким образом, процесс взлома шифра простой замены можно описать, как подбор первичного ключа дешифрования и его
        последовательное изменение по мере того, как улучшаются показатели частот появления языковых конструкций в
        расшифрованном с его помощью тексте.
    </p>

    <#if openPracLable??>
        <h2 style="color: #4B0082">${openPracLable}</h2>
    </#if>
    <form action="/check_Level2_theory" method="post" class="mt-4 mb-4">
        <input type="hidden" name="_csrf" value="${_csrf.token}">
        <button type="submit" class="btn btn-primary" style="background-color: #4B0082; border: #4B0082;">Я прочитал!</button>
    </form>
</div>
<#include "../../footer.ftlh">